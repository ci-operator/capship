---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: runner
  template: redrunner
message: RedRunner is deployed
metadata:
  annotations:
    description: |-
      RedRunner - A minimalist API for distributable, in-cluster microservice O&M via ansible playbooks
    iconClass: icon-openshift
    openshift.io/display-name: RedRunner
    openshift.io/documentation-url: https://gitlab.engineering.redhat.com/ccit/redrunner/raw/master/README.md
    openshift.io/long-description: This template deploys RedRunner
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    tags: redrunner,backup,recovery,admin,ops,ansible,ansible-runner,runner
  name: redrunner

objects:
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: runner
    namespace: "${NAMESPACE}"
  spec:
    updateStrategy:
      type: RollingUpdate
    podManagementPolicy: Parallel
    selector:
      matchLabels:
        app: runner
    template:
      metadata:
        labels:
          app: runner
        name: runner
      spec:
        serviceAccountName: runner
        containers:
        - name: runner
          args:
          - /runner/runner
          image: ${RUNNER_IMAGE}:${RUNNER_TAG}
          imagePullPolicy: Always
          env:
          - name: RP_HOST
            value: ${HOST_NAME}.cloud.paas.psi.redhat.com
          - name: RUNNER_VERBOSITY
            value: INFO
          - name: RUNNER_DB
            value: /runner/data/runner.db
          - name: TINI_SUBREAPER
            value: 'true'
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          ports:
          - containerPort: 9011
            protocol: TCP
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
          volumeMounts:
          - mountPath: /ansible/requirements.yml
            subPath: requirements.yml
            name: galaxy-requirements
          - mountPath: /runner/.ansible
            name: ansible-tmp
          - mountPath: /.ansible
            name: ansible-tmp
          - mountPath: /runner/.kube
            name: runner-kubeconfig
          - mountPath: /.kube
            name: kubeconfig
          - mountPath: /runner/data
            name: runner-data
          - mountPath: /runner/components/project
            name: components
          - mountPath: /runner/components/inventory/hosts
            subPath: hosts
            name: inventory
          - mountPath: /runner/components/artifacts
            name: runner-artifacts
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: runner-data
          persistentVolumeClaim:
            claimName: "${RUNNER_PVC}"
        - name: components
          configMap:
            name: "${RUNNER_COMPONENTS_CM}"
        - name: inventory
          configMap:
            name: runner-hosts
        - name: runner-artifacts
          emptyDir: {}
        - name: ansible-tmp
          emptyDir:
            medium: Memory
        - name: kubeconfig
          emptyDir:
            medium: Memory
        - name: galaxy-requirements
          configMap:
            name: "${GALAXY_REQUIREMENTS_CM}"
            items:
            - key: requirements.yml
              path: requirements.yml
        - name: runner-kubeconfig
          emptyDir:
            medium: Memory

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: runner
    name: runner
  spec:
    ports:
    - name: 9011-tcp
      port: 9011
      protocol: TCP
      targetPort: 9011
    selector:
      app: runner
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: runner
    name: runner
  spec:
    host: ${HOST_NAME}-runner.cloud.paas.psi.redhat.com
    port:
      targetPort: 9011-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    to:
      kind: Service
      name: runner
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: runner
    namespace: "${NAMESPACE}"

- apiVersion: authorization.openshift.io/v1
  kind: RoleBinding
  metadata:
    name: runner
  roleRef:
    name: admin
  subjects:
  - kind: ServiceAccount
    name: runner
    namespace: "${NAMESPACE}"

parameters:
- description: Project Namespace
  displayName: Runner Project Namespace
  name: NAMESPACE
  required: true
- description: Project Hostname Base
  displayName: Runner Project Host Name Base
  name: HOST_NAME
  required: true
- description: Runner Port
  displayName: Runner Port
  name: RUNNER_PORT
  value: "9011"
  required: true
- description: Runner Image Stream
  displayName: Runner Image Registry Repository
  name: RUNNER_IMAGE
  value: "docker-registry.upshift.redhat.com/ccit/runner"
  required: true
- description: Runner Image Tag
  displayName: Runner Image Tag
  name: RUNNER_TAG
  required: true
- description: Runner PVC Name
  displayName: Runner PersistentVolumeClaim Name
  name: RUNNER_PVC
  value: "runner-data"
  required: true
- description: Runner Components ConfigMap Name
  displayName: Mounted configmap containing ansible playbooks
  name: RUNNER_COMPONENTS_CM
  value: "recovery-components"
  required: true
- description: Runner Galaxy requirements ConfigMap Name
  displayName: Mounted configmap containing Ansible Galaxy requirements.yml
  name: GALAXY_REQUIREMENTS_CM
  value: "runner-roles"
  required: true
